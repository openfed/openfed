<?php

/**
 * Implements hook_schema().
 */
function ofed_feature_video_schema() {
  
}

/**
 * Implements hook_install().
 */
function ofed_feature_video_install() {
  // If the related feature is not enabled.
  if (!module_exists('ofed_video')) {
    // Enable it.
    module_enable(array('ofed_video'));
  }

  // Install menu link(s).
  $menus = menu_get_menus(FALSE);
  if (!isset($menus['menu-cms-menu'])) {
    // Create a CMS Menu if not exist.
    $menu = array();
    $menu['menu_name'] = "menu-cms-menu";
    $menu['title'] = "CMS Menu";
    $menu['description'] = "";
    menu_save($menu);
    // Update the menu router information.
    menu_rebuild();
  }
  // Create the menu content type link(s).
  $item = array(
    'link_title' => t('Video'),
    'link_path' => 'cms/video',
    'router_path' => 'cms/video',
    'menu_name' => 'menu-cms-menu',
    'customized' => 1,
  );
  menu_link_save($item);

  // Include ds settings.
  $file = drupal_get_path('module', 'ofed_feature_video') . '/install/_ofed_feature_video.ds.inc';
  if (file_exists($file)) {
    // Include it.
    include_once 'install/_ofed_feature_video.ds.inc';

    // Install ds customs fields.
    if (function_exists('ofed_feature_video_ds_custom_fields_info')) {
      $fields = ofed_feature_video_ds_custom_fields_info();
      foreach ($fields as $id => $field) {
        // Remove one key.
        if (isset($field->api_version)) {
          unset($field->api_version);
        }
        // Serialize the entities.
        $field->entities = serialize($field->entities);
        // Serialize the ui_limit.
        $field->ui_limit = serialize($field->ui_limit);
        // Serialize the properties.
        $field->properties = serialize($field->properties);

        // Cast variable like an array.
        $field = (array) $field;

        // Save in database.
        db_insert('ds_fields')->fields($field)->execute();
      }
    }

    // Install ds fields settings.
    if (function_exists('ofed_feature_video_ds_field_settings_info')) {
      $fields = ofed_feature_video_ds_field_settings_info();
      foreach ($fields as $id => $field) {
        // Remove one key.
        if (isset($field->api_version)) {
          unset($field->api_version);
        }
        // Serialize the settings.
        $field->settings = serialize($field->settings);

        // Cast variable like an array.
        $field = (array) $field;

        // Save in database.
        db_insert('ds_field_settings')->fields($field)->execute();
      }
    }

    // Install ds layouts settings.
    if (function_exists('ofed_feature_video_ds_layout_settings_info')) {
      $layouts = ofed_feature_video_ds_layout_settings_info();
      foreach ($layouts as $id => $layout) {
        // Remove one key.
        if (isset($layout->api_version)) {
          unset($layout->api_version);
        }
        // Serialize the settings.
        $layout->settings = serialize($layout->settings);

        // Cast variable like an array.
        $layout = (array) $layout;

        // Save in database.
        db_insert('ds_layout_settings')->fields($layout)->execute();
      }
    }
  }

  // Create path alias for each languages.
  $languages = language_list('enabled');
  foreach ($languages as $language) {
    // FR.
    if (isset($language['fr'])) {
      $path = array(
        'source' => 'video',
        'alias' => 'video',
        'language' => 'fr',
      );
      db_insert('url_alias')->fields($path)->execute();
    }

    if (isset($language['nl'])) {
      // NL.
      $path = array(
        'source' => 'video',
        'alias' => 'video',
        'language' => 'nl',
      );
      db_insert('url_alias')->fields($path)->execute();
    }
  }
  
  // Install the file settings.
  $settings = array(
    'view_modes' => array(
      'media_preview' => array(
        'custom_settings' => TRUE,
      ),
      'media_link' => array(
        'custom_settings' => FALSE,
      ),
      'media_small' => array(
        'custom_settings' => FALSE,
      ),
      'media_large' => array(
        'custom_settings' => FALSE,
      ),
      'media_original' => array(
        'custom_settings' => FALSE,
      ),
      'token' => array(
        'custom_settings' => FALSE,
      ),
    ),
    'extra_fields' => array(
      'form' => array(),
      'display' => array(
        'file' => array(
          'default' => array(
            'weight' => '0',
            'visible' => TRUE,
          ),
          'media_preview' => array(
            'weight' => '1',
            'visible' => TRUE,
          ),
          'media_link' => array(
            'weight' => '0',
            'visible' => FALSE,
          ),
          'media_small' => array(
            'weight' => '0',
            'visible' => FALSE,
          ),
          'media_large' => array(
            'weight' => '0',
            'visible' => FALSE,
          ),
          'media_original' => array(
            'weight' => '0',
            'visible' => FALSE,
          ),
        ),
      ),
    ),
  );
  variable_set('field_bundle_settings_file__video', $settings);
}

/**
 * Implements hook_uninstall().
 */
function ofed_feature_video_uninstall() {
  // If the related feature is enabled.
  if (module_exists('ofed_video')) {
    // Disable it.
    module_disable(array('ofed_video'));
  }
}
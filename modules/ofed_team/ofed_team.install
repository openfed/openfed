<?php

/**
 * Implements hook_schema().
 */
function ofed_team_schema() {

}

/**
 * Implements hook_install().
 */
function ofed_team_install() {
// Install Taxonomy vocabulary
  $vocabularies = array(
    'ofed_team_civility' => array(
      'name' => 'Team members civility',
      'machine_name' => 'ofed_team_civility',
      'description' => '',
      'hierarchy' => '0',
      'module' => 'taxonomy',
      'weight' => '0',
      'language' => 'und',
      'i18n_mode' => '4',
    ),
    'ofed_team_gender' => array(
      'name' => 'Team members gender',
      'machine_name' => 'ofed_team_gender',
      'description' => '',
      'hierarchy' => '0',
      'module' => 'taxonomy',
      'weight' => '0',
      'language' => 'und',
      'i18n_mode' => '4',
    ),
  );

  // Install taxonomy terms...
  $existing = taxonomy_get_vocabularies();

  foreach ($vocabularies as $vocabulary) {
    $vocabulary = (object) $vocabulary;

    foreach ($existing as $existing_vocab) {

      if ($existing_vocab->machine_name === $vocabulary->machine_name) {
        $vocabulary->vid = $existing_vocab->vid;
      }
    }
    taxonomy_vocabulary_save($vocabulary);
  }
  // build terms array
  $civilities = array(
    'en' => array('Mrs.', 'Ms.', 'Mr.'),
    'fr' => array('Madame', 'Mademoiselle', 'Monsieur'),
    'nl' => array('Mevrouw', 'Jufrouw', 'Meneer'),
  );
  $genders = array(
    'en' => array('Women', 'Men'),
    'fr' => array('Femme', 'Homme'),
    'nl' => array('Vrouw', 'Man'),
  );

  $civility_vocabulary = taxonomy_vocabulary_machine_name_load('ofed_team_civility');
  $gender_vocabulary = taxonomy_vocabulary_machine_name_load('ofed_team_gender');

  // get enabled languages
  $languages = language_list();

  foreach ($languages as $language) {
    $lang = empty($language->prefix) ? $language->language : $language->prefix;

    if (!empty($civilities[$lang])) {
      _ofed_team_taxonomy_term_save($civilities[$lang], $civility_vocabulary->vid, $lang);
    }

    if (!empty($gender[$lang])) {
      _ofed_team_taxonomy_term_save($genders[$lang], $gender_vocabulary->vid, $lang);
    }
  }
}

/**
 * Taxonomy terms save multiple value at once.
 * @param type $terms
 * @param type $vid
 * @param type $lang
 * @param type $update
 */
function _ofed_team_taxonomy_term_save($terms, $vid, $lang, $update = FALSE) {
  $existing_terms = array();

  if ($update) {
    $existing_terms = taxonomy_get_tree($vid);
    $existing_terms = array_map('_ofed_team_get_existing_term_names', $existing_terms);
  }

  $weight = 0;
  foreach ($terms as $term) {
    if (!$update || !in_array($term, $existing_terms)) {
      $new_term = new stdClass();
      $new_term->name = $term;
      $new_term->vid = $vid;
      $new_term->language = $lang;
      $new_term->weight = $weight;
      taxonomy_term_save($new_term);
      $weight++;
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function ofed_team_uninstall() {

}
<?php

/**
 * Implements hook_schema().
 */
function ofed_feature_job_schema() {
  
}

/**
 * Implements hook_install().
 */
function ofed_feature_job_install() {
  // If the related feature is not enabled.
  if (!module_exists('ofed_job')) {
    // Enable it.
    module_enable(array('ofed_job'));
  }

  // Include ds settings.
  $file = drupal_get_path('module', 'ofed_feature_job') . '/install/_ofed_feature_job.ds.inc';
  if (file_exists($file)) {
    // Include it.
    include_once 'install/_ofed_feature_job.ds.inc';

    // Install ds customs fields.
    if (function_exists('ofed_feature_job_ds_custom_fields_info')) {
      $fields = ofed_feature_job_ds_custom_fields_info();
      foreach ($fields as $id => $field) {
        // Remove one key.
        if (isset($field->api_version)) {
          unset($field->api_version);
        }
        // Serialize the entities.
        $field->entities = serialize($field->entities);
        // Serialize the ui_limit.
        $field->ui_limit = serialize($field->ui_limit);
        // Serialize the properties.
        $field->properties = serialize($field->properties);

        // Cast variable like an array.
        $field = (array) $field;

        // Save in database.
        db_insert('ds_fields')->fields($field)->execute();
      }
    }

    // Install ds fields settings.
    if (function_exists('ofed_feature_job_ds_field_settings_info')) {
      $fields = ofed_feature_job_ds_field_settings_info();
      foreach ($fields as $id => $field) {
        // Remove one key.
        if (isset($field->api_version)) {
          unset($field->api_version);
        }
        // Serialize the settings.
        $field->settings = serialize($field->settings);

        // Cast variable like an array.
        $field = (array) $field;

        // Save in database.
        db_insert('ds_field_settings')->fields($field)->execute();
      }
    }

    // Install ds layouts settings.
    if (function_exists('ofed_feature_job_ds_layout_settings_info')) {
      $layouts = ofed_feature_job_ds_layout_settings_info();
      foreach ($layouts as $id => $layout) {
        // Remove one key.
        if (isset($layout->api_version)) {
          unset($layout->api_version);
        }
        // Serialize the settings.
        $layout->settings = serialize($layout->settings);

        // Cast variable like an array.
        $layout = (array) $layout;

        // Save in database.
        db_insert('ds_layout_settings')->fields($layout)->execute();
      }
    }
  }

  // Create path alias for each languages.
  $languages = language_list('enabled');
  foreach ($languages as $language) {
    // FR.
    if (isset($language['fr'])) {
      $path = array(
        'source' => 'job',
        'alias' => 'job',
        'language' => 'fr',
      );
      db_insert('url_alias')->fields($path)->execute();
    }

    if (isset($language['nl'])) {
      // NL.
      $path = array(
        'source' => 'job',
        'alias' => 'job',
        'language' => 'nl',
      );
      db_insert('url_alias')->fields($path)->execute();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function ofed_feature_job_uninstall() {
  // If the related feature is enabled.
  if (module_exists('ofed_job')) {
    // Disable it.
    module_disable(array('ofed_job'));
  }
}
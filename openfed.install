<?php

/**
 * @file
 * Install, update and uninstall functions for the OpenFed install profile.
 */

/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function openfed_install() {
  // Include all custom functions.
  require_once('includes/misc/openfed_functions.inc');

  // Include all modules configurations.
  require_once('includes/install/openfed_roles.inc');
  require_once('includes/install/openfed_users.inc');
  require_once('includes/install/openfed_text_format.inc');
  require_once('includes/install/openfed_menus.inc');
  require_once('includes/install/openfed_blocks.inc');
  require_once('includes/install/openfed_ckeditor.inc');
  require_once('includes/install/openfed_ckeditor_link.inc');
  require_once('includes/install/openfed_colorbox.inc');
  require_once('includes/install/openfed_date.inc');
  require_once('includes/install/openfed_displaysuite.inc');
  require_once('includes/install/openfed_extlink.inc');
  require_once('includes/install/openfed_easy_breadcrumb.inc');
  require_once('includes/install/openfed_flag.inc');
  require_once('includes/install/openfed_globalredirect.inc');
  require_once('includes/install/openfed_html5_tools.inc');
  require_once('includes/install/openfed_imce.inc');
  require_once('includes/install/openfed_linkchecker.inc');
  require_once('includes/install/openfed_logintoboggan.inc');
  require_once('includes/install/openfed_pathauto.inc');
  require_once('includes/install/openfed_path_breadcrumbs.inc');
  require_once('includes/install/openfed_print.inc');
  require_once('includes/install/openfed_regional.inc');
  require_once('includes/install/openfed_sharethis.inc');
  require_once('includes/install/openfed_sitemap.inc');
  require_once('includes/install/openfed_securelogin.inc');
  require_once('includes/install/openfed_text_resize.inc');
  require_once('includes/install/openfed_views.inc');
  require_once('includes/install/openfed_webform.inc');
}

/**
 * UPDATES.
 */

/**
 * Add new display mode 'short_references'.
 */
function openfed_update_7101() {
  $view_modes = ds_entity_view_modes('node');
  if (!array_key_exists('short_reference', $view_modes)) {
    $view_mode = new stdClass();
    $view_mode->view_mode = 'short_references';
    $view_mode->label = 'Short references';
    $view_mode->entities = array('node' => 'node');
    drupal_write_record('ds_view_modes', $view_mode);
  }
}

/**
 * Fix issue with ckeditor configuration (#2087599)
 */
function openfed_update_7102() {
  // Update Full settings
  $settings = db_select('ckeditor_settings', 'c')
    ->fields('c', array('settings'))
    ->condition('name', 'Full')
    ->execute()
    ->fetchField();
  $settings = unserialize($settings);
  $settings['css_path'] = '/profiles/openfed/assets/rte/rte.custom.css';
  $settings['styles_path'] = '/profiles/openfed/assets/rte/rte.custom.js';

  db_update('ckeditor_settings')
  ->fields(array(
    'settings' => serialize($settings),
  ))
  ->condition('name', 'Full', '=')
  ->execute();

  // Update Full settings
  $settings = db_select('ckeditor_settings', 'c')
    ->fields('c', array('settings'))
    ->condition('name', 'Advanced')
    ->execute()
    ->fetchField();
  $settings = unserialize($settings);

  $settings['css_path'] = '/profiles/openfed/assets/rte/rte.custom.css';
  $settings['styles_path'] = '/profiles/openfed/assets/rte/rte.custom.js';

  db_update('ckeditor_settings')
  ->fields(array(
    'settings' => serialize($settings),
  ))
  ->condition('name', 'Advanced', '=')
  ->execute();
}

/**
 * Fix #2087517 permissions on the start page
 */
function openfed_update_7103() {
  $roles = array('Builder', 'Configurator', 'Content Manager');
  $permissions = array('access ofed_switcher administration', 'access ofed_switcher content');

  foreach ($roles as $role_name) {
    $role = user_role_load_by_name($role_name);

    if (!empty($role->rid)) {
      // Assign permission to role.
      user_role_grant_permissions($role->rid, $permissions);
    }
  }
}


/**
 * Fix issue with ckeditor configuration (#2087599) fixing extra space typo
 */
function openfed_update_7104() {
  // Update Full settings
  $settings = db_select('ckeditor_settings', 'c')
    ->fields('c', array('settings'))
    ->condition('name', 'Full')
    ->execute()
    ->fetchField();
  $settings = unserialize($settings);
  $settings['css_path'] = '/profiles/openfed/assets/rte/rte.custom.css';
  $settings['styles_path'] = '/profiles/openfed/assets/rte/rte.custom.js';

  db_update('ckeditor_settings')
  ->fields(array(
    'settings' => serialize($settings),
  ))
  ->condition('name', 'Full', '=')
  ->execute();

  // Update Full settings
  $settings = db_select('ckeditor_settings', 'c')
    ->fields('c', array('settings'))
    ->condition('name', 'Advanced')
    ->execute()
    ->fetchField();
  $settings = unserialize($settings);

  $settings['css_path'] = '/profiles/openfed/assets/rte/rte.custom.css';
  $settings['styles_path'] = '/profiles/openfed/assets/rte/rte.custom.js';

  db_update('ckeditor_settings')
  ->fields(array(
    'settings' => serialize($settings),
  ))
  ->condition('name', 'Advanced', '=')
  ->execute();
}

/**
 * Fix issue #2037961: Store language preference in cookie
 */
function openfed_update_7105() {
  $negotiation = variable_get('language_negotiation_language', array());
  $negotiation['language-cookie'] = array(
    'callbacks' => array(
      'language' => 'locale_cookie_language_from_cookie',
    ),
    'file' => drupal_get_path('module', 'locale_cookie') . '/includes/locale_cookie.inc',
  );
  variable_set('language_negotiation_language', $negotiation);

  $provider_weight = variable_get('locale_language_providers_weight_language', array());
  $provider_weight['language-cookie'] = $provider_weight['locale-url'] + 1;
  variable_set('locale_language_providers_weight_language', $provider_weight);

  // Regional and language > Language > Detection and selection > Cookie.
  variable_set('locale_cookie_language_negotiation_cookie_param', 'language');
  variable_set('locale_cookie_language_negotiation_cookie_expire', '365');
  variable_set('locale_cookie_language_negotiation_cookie_path', '/');
  variable_set('locale_cookie_language_negotiation_cookie_domain', '');
  variable_set('locale_cookie_language_negotiation_cookie_secure', 0);
  variable_set('locale_cookie_language_negotiation_cookie_http_only', 0);
}

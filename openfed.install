<?php
/**
 * @file
 * Install, uninstall and update hooks for Openfed.
 */

use Drupal\Core\Database\Database;
use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_install().
 */
function openfed_install() {
}

/**
 * Implements hook_update_dependencies().
 */
function openfed_update_dependencies() {
  $dependencies = [];

  // Ensure that media_entity_update_8201() runs before the openfed update.
  $dependencies['openfed'][8601] = [
    'media_entity' => 8201
  ];

  return $dependencies;
}

/**
 * Removed in Openfed 8.x-5.0.
 *
 * Formely fixed the problem with file_entity module when upgrading from 8.3.x to 8.4.x.
 *
 * @deprecated
 */
function openfed_update_8201(&$sandbox) {
}

/**
 * Removed in Openfed 8.x-5.0.
 *
 * Formely updated file entity configuration with a new generic file entity.
 * Read more: http://drupal.org/node/2927468.
 *
 * @deprecated
 */
function openfed_update_8202(&$sandbox) {
}

/**
 * Removed in Openfed 8.x-5.0.
 *
 * Formely updated default config due to the new Openfed SVG File field.
 *
 * @deprecated
 */
function openfed_update_8203(&$sandbox) {
}

/**
 * Removed in Openfed 8.x-5.0.
 *
 * Formely fixed entity.definitions.bundle_field_map key store with old bundles.
 *
 * @deprecated
 */
function openfed_update_8401(&$sandbox) {
}

/**
 * Formely updated configs related to core.base_field_override.media.* with the new
 * default_value_callback when upgrading from 8.5.x to 8.6.x, since media is now
 * part of the core.
 */
function openfed_update_8601(&$sandbox) {
  $message = '';

  // Gets the Config Factory service.
  $config_factory = \Drupal::configFactory();
  // Gets the list of media entity bundles.
  /** @var \Drupal\Core\Entity\EntityTypeBundleInfo $media_bundles_info */
  $media_bundles_info = \Drupal::service('entity_type.bundle.info')->getBundleInfo('media');

  // Make sure there are media bundles.
  if (!empty($media_bundles_info)) {

    foreach (array_keys($media_bundles_info) as $bundle_name) {

      // Make sure the configuration exists.
      if (in_array("core.base_field_override.media.{$bundle_name}.uid", $config_factory->listAll("core.base_field_override.media"))) {
        // Gets the editable configuration.
        $config = $config_factory->getEditable("core.base_field_override.media.{$bundle_name}.uid");
        // Sets the new default_value_callback method.
        $config->set('default_value_callback', 'Drupal\media\Entity\Media::getCurrentUserId');
        // Saves the configuration.
        $config->save(TRUE);

        $message .= "Config of $bundle_name was updated.\n";
      }
    }
  }

  return $message;
}